ARM GAS  /tmp/cc59vyBt.s 			page 1


   1              	# 1 "../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S"
   1              	/*
   0              	
   0              	
   2              	    ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3              	              2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4              	
   5              	    This file is part of ChibiOS.
   6              	
   7              	    ChibiOS is free software; you can redistribute it and/or modify
   8              	    it under the terms of the GNU General Public License as published by
   9              	    the Free Software Foundation version 3 of the License.
  10              	
  11              	    ChibiOS is distributed in the hope that it will be useful,
  12              	    but WITHOUT ANY WARRANTY; without even the implied warranty of
  13              	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14              	    GNU General Public License for more details.
  15              	
  16              	    You should have received a copy of the GNU General Public License
  17              	    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18              	*/
  19              	
  20              	/**
  21              	 * @file    ARMv6-M/compilers/GCC/chcoreasm.S
  22              	 * @brief   ARMv6-M port low level code.
  23              	 *
  24              	 * @addtogroup ARMV6M_GCC_CORE
  25              	 * @{
  26              	 */
  27              	
  28              	#if !defined(FALSE) || defined(__DOXYGEN__)
  29              	#define FALSE   0
  30              	#endif
  31              	
  32              	#if !defined(TRUE) || defined(__DOXYGEN__)
  33              	#define TRUE    1
  34              	#endif
  35              	
  36              	#define _FROM_ASM_
  37              	#include "chlicense.h"
   1              	/*
   2              	    ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3              	              2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4              	
   5              	    This file is part of ChibiOS.
   6              	
   7              	    ChibiOS is free software; you can redistribute it and/or modify
   8              	    it under the terms of the GNU General Public License as published by
   9              	    the Free Software Foundation version 3 of the License.
  10              	
  11              	    ChibiOS is distributed in the hope that it will be useful,
  12              	    but WITHOUT ANY WARRANTY; without even the implied warranty of
  13              	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14              	    GNU General Public License for more details.
  15              	
  16              	    You should have received a copy of the GNU General Public License
  17              	    along with this program.  If not, see <http://www.gnu.org/licenses/>.
ARM GAS  /tmp/cc59vyBt.s 			page 2


  18              	*/
  19              	
  20              	/**
  21              	 * @file    chlicense.h
  22              	 * @brief   License Module macros and structures.
  23              	 *
  24              	 * @addtogroup chibios_license
  25              	 * @details This module contains all the definitions required for defining
  26              	 *          a licensing scheme for customers or public releases.
  27              	 * @{
  28              	 */
  29              	
  30              	#ifndef CHLICENSE_H
  31              	#define CHLICENSE_H
  32              	
  33              	/*===========================================================================*/
  34              	/* Module constants.                                                         */
  35              	/*===========================================================================*/
  36              	
  37              	/**
  38              	 * @name   Allowed Features Levels
  39              	 * @{
  40              	 */
  41              	#define CH_FEATURES_BASIC                   0
  42              	#define CH_FEATURES_INTERMEDIATE            1
  43              	#define CH_FEATURES_FULL                    2
  44              	/** @} */
  45              	
  46              	/**
  47              	 * @name    Deployment Options
  48              	 * @{
  49              	 */
  50              	#define CH_DEPLOY_UNLIMITED                -1
  51              	#define CH_DEPLOY_NONE                      0
  52              	/** @} */
  53              	
  54              	/**
  55              	 * @name    Licensing Options
  56              	 * @{
  57              	 */
  58              	#define CH_LICENSE_GPL                      0
  59              	#define CH_LICENSE_GPL_EXCEPTION            1
  60              	#define CH_LICENSE_COMMERCIAL_FREE          2
  61              	#define CH_LICENSE_COMMERCIAL_DEV_1000      3
  62              	#define CH_LICENSE_COMMERCIAL_DEV_5000      4
  63              	#define CH_LICENSE_COMMERCIAL_FULL          5
  64              	#define CH_LICENSE_COMMERCIAL_RUNTIME       6
  65              	#define CH_LICENSE_PARTNER                  7
  66              	/** @} */
  67              	
  68              	#include "chversion.h"
   1              	/*
  69              	#include "chcustomer.h"
   1              	/*
  70              	#if CH_LICENSE == CH_LICENSE_PARTNER
  38              	#include "chconf.h"
   1              	/*
ARM GAS  /tmp/cc59vyBt.s 			page 3


   2              	AMiRo-OS is an operating system designed for the Autonomous Mini Robot (AMiRo) platform.
   3              	Copyright (C) 2016..2022  Thomas Schöpping et al.
   4              	
   5              	This program is free software: you can redistribute it and/or modify
   6              	it under the terms of the GNU (Lesser) General Public License as published by
   7              	the Free Software Foundation, either version 3 of the License, or
   8              	(at your option) any later version.
   9              	
  10              	This program is distributed in the hope that it will be useful,
  11              	but WITHOUT ANY WARRANTY; without even the implied warranty of
  12              	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13              	GNU (Lesser) General Public License for more details.
  14              	
  15              	You should have received a copy of the GNU (Lesser) General Public License
  16              	along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17              	*/
  18              	
  19              	/**
  20              	 * @file    chconf.h
  21              	 * @brief   ChibiOS Configuration file for the NUCLEO-G071RB module.
  22              	 * @details Contains the application specific kernel settings.
  23              	 *
  24              	 * @defgroup nucleog071rb_cfg_chibiosrt ChibiOS/RT
  25              	 * @ingroup nucleog071rb_cfg
  26              	 *
  27              	 * @brief   Todo
  28              	 * @details Todo
  29              	 *
  30              	 * @addtogroup nucleog071rb_cfg_chibiosrt
  31              	 * @{
  32              	 */
  33              	
  34              	#ifndef CHCONF_H
  35              	#define CHCONF_H
  36              	
  37              	#include <aosconf.h>
   1              	/*
   2              	AMiRo-OS is an operating system designed for the Autonomous Mini Robot (AMiRo) platform.
   3              	Copyright (C) 2016..2022  Thomas Schöpping et al.
   4              	
   5              	This program is free software: you can redistribute it and/or modify
   6              	it under the terms of the GNU (Lesser) General Public License as published by
   7              	the Free Software Foundation, either version 3 of the License, or
   8              	(at your option) any later version.
   9              	
  10              	This program is distributed in the hope that it will be useful,
  11              	but WITHOUT ANY WARRANTY; without even the implied warranty of
  12              	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13              	GNU (Lesser) General Public License for more details.
  14              	
  15              	You should have received a copy of the GNU (Lesser) General Public License
  16              	along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17              	*/
  18              	
  19              	/**
  20              	 * @file    aosconf.h
  21              	 * @brief   AMiRo-OS Configuration file for the NUCLEO-G071RB module.
ARM GAS  /tmp/cc59vyBt.s 			page 4


  22              	 * @details Contains the application specific AMiRo-OS settings.
  23              	 *
  24              	 * @defgroup nucleog071rb_cfg_amiroos AMiRo-OS
  25              	 * @ingroup nucleog071rb_cfg
  26              	 *
  27              	 * @brief   Todo
  28              	 * @details Todo
  29              	 *
  30              	 * @addtogroup nucleog071rb_cfg_amiroos
  31              	 * @{
  32              	 */
  33              	
  34              	#ifndef AOSCONF_H
  35              	#define AOSCONF_H
  36              	
  37              	/*
  38              	 * compatibility guards
  39              	 */
  40              	#define _AMIRO_OS_CFG_
  41              	#define AMIRO_OS_CFG_VERSION_MAJOR              2
  42              	#define AMIRO_OS_CFG_VERSION_MINOR              3
  43              	
  44              	#include <stdbool.h>
   1              	/* Copyright (C) 1998-2019 Free Software Foundation, Inc.
  45              	
  46              	/*
  47              	 * Include an external configuration file to override the following default
  48              	 * settings only if required.
  49              	 */
  50              	#if defined(AMIRO_APPS) && (AMIRO_APPS == true)
  51              	  #include <osconf.h>
   1              	/*
   2              	AMiRo-Apps is a collection of applications and configurations for the
   3              	Autonomous Mini Robot (AMiRo) platform.
   4              	Copyright (C) 2018..2022  Thomas Schöpping et al.
   5              	
   6              	This program is free software: you can redistribute it and/or modify
   7              	it under the terms of the GNU (Lesser) General Public License as published by
   8              	the Free Software Foundation, either version 3 of the License, or
   9              	(at your option) any later version.
  10              	
  11              	This program is distributed in the hope that it will be useful,
  12              	but WITHOUT ANY WARRANTY; without even the implied warranty of
  13              	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14              	GNU (Lesser) General Public License for more details.
  15              	
  16              	You should have received a copy of the GNU (Lesser) General Public License
  17              	along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18              	*/
  19              	
  20              	/**
  21              	 * @file    osconf.h
  22              	 * @brief   OS configuration file for the NUCLEO-G071RB module.
  23              	 * @details Contains the module specific AMiRo-OS settings.
  24              	 *
  25              	 * @addtogroup configs_helloworld_modules_nucleog071rb
  26              	 * @{
ARM GAS  /tmp/cc59vyBt.s 			page 5


  27              	 */
  28              	
  29              	#ifndef OSCONF_H
  30              	#define OSCONF_H
  31              	
  32              	/*===========================================================================*/
  33              	/**
  34              	 * @name Kernel parameters and options
  35              	 * @{
  36              	 */
  37              	/*===========================================================================*/
  38              	
  39              	/**
  40              	 * @brief   Flag to enable/disable debug API and logic.
  41              	 */
  42              	#if !defined(OS_CFG_DBG)
  43              	#define OS_CFG_DBG                              false
  44              	#endif
  45              	
  46              	/** @} */
  47              	
  48              	/*===========================================================================*/
  49              	/**
  50              	 * @name Bootloader configuration
  51              	 * @{
  52              	 */
  53              	/*===========================================================================*/
  54              	
  55              	/** @} */
  56              	
  57              	/*===========================================================================*/
  58              	/**
  59              	 * @name SSSP (Startup Shutdown Synchronization Protocol) configuration.
  60              	 * @{
  61              	 */
  62              	/*===========================================================================*/
  63              	
  64              	/** @} */
  65              	
  66              	/*===========================================================================*/
  67              	/**
  68              	 * @name System shell options
  69              	 * @{
  70              	 */
  71              	/*===========================================================================*/
  72              	
  73              	/** @} */
  74              	
  75              	/*===========================================================================*/
  76              	/**
  77              	 * @name main function hooks
  78              	 * @{
  79              	 */
  80              	/*===========================================================================*/
  81              	
  82              	/**
  83              	 * @brief   Event mask to identify emergency events.
ARM GAS  /tmp/cc59vyBt.s 			page 6


  84              	 */
  85              	#define MAIN_EMERGENCY_EVENT                    EVENT_MASK(8)
  86              	
  87              	/**
  88              	 * @brief   Main loop event hook to handle µRT emergency shutdown events.
  89              	 */
  90              	#define AMIROOS_CFG_MAIN_LOOP_EVENTHOOK(eventmask)                              \
  91              	  aosDbgAssert(eventmask == MAIN_EMERGENCY_EVENT);                              \
  92              	  chEvtGetAndClearFlags(&urtEmergencyListener);                                 \
  93              	  shutdown = AOS_SHUTDOWN_ACTIVE;
  94              	
  95              	/** @} */
  96              	
  97              	#include <HelloWorld_osconf.h>
   1              	/*
  98              	
  52              	#endif /* defined(AMIRO_APPS) && (AMIRO_APPS == true) */
  38              	
  39              	/*===========================================================================*/
  40              	/**
  41              	 * @name System settings
  42              	 * @{
  43              	 */
  44              	/*===========================================================================*/
  45              	
  46              	/**
  47              	 * @brief   Handling of instances.
  48              	 * @note    If enabled then threads assigned to various instances can
  49              	 *          interact each other using the same synchronization objects.
  50              	 *          If disabled then each OS instance is a separate world, no
  51              	 *          direct interactions are handled by the OS.
  52              	 */
  53              	#if !defined(CH_CFG_SMP_MODE)
  54              	#define CH_CFG_SMP_MODE                         FALSE
  55              	#endif
  56              	
  57              	/** @} */
  58              	
  59              	/*===========================================================================*/
  60              	/**
  61              	 * @name System timers settings
  62              	 * @{
  63              	 */
  64              	/*===========================================================================*/
  65              	
  66              	/**
  67              	 * @brief   System time counter resolution.
  68              	 * @note    Allowed values are 16 or 32 bits.
  69              	 */
  70              	#if !defined(CH_CFG_ST_RESOLUTION)
  71              	#define CH_CFG_ST_RESOLUTION                    32
  72              	#endif
  73              	
  74              	// more common definitions in aos_chconf.h
  75              	
  76              	/** @} */
  77              	
ARM GAS  /tmp/cc59vyBt.s 			page 7


  78              	/*===========================================================================*/
  79              	/**
  80              	 * @name Kernel parameters and options
  81              	 * @{
  82              	 */
  83              	/*===========================================================================*/
  84              	
  85              	// common definitions in aos_chconf.h
  86              	
  87              	/** @} */
  88              	
  89              	/*===========================================================================*/
  90              	/**
  91              	 * @name Performance options
  92              	 * @{
  93              	 */
  94              	/*===========================================================================*/
  95              	
  96              	// common definitions in aos_chconf.h
  97              	
  98              	/** @} */
  99              	
 100              	/*===========================================================================*/
 101              	/**
 102              	 * @name Subsystem options
 103              	 * @{
 104              	 */
 105              	/*===========================================================================*/
 106              	
 107              	/*
 108              	 * The Cortex-M0  core of this MCU does not support a realtime counter
 109              	 * (PORT_SUPPORTS_RT is FALSE), which is a requirement for the time measurement
 110              	 * API. Hence, this feature is always disabled for this module.
 111              	 */
 112              	#define CH_CFG_USE_TM                           FALSE
 113              	
 114              	// more common definitions in aos_chconf.h
 115              	
 116              	/** @} */
 117              	
 118              	/*===========================================================================*/
 119              	/**
 120              	 * @name OSLIB options
 121              	 * @{
 122              	 */
 123              	/*===========================================================================*/
 124              	
 125              	// common definitions in aos_chconf.h
 126              	
 127              	/** @} */
 128              	
 129              	/*===========================================================================*/
 130              	/**
 131              	 * @name Objects factory options
 132              	 * @{
 133              	 */
 134              	/*===========================================================================*/
ARM GAS  /tmp/cc59vyBt.s 			page 8


 135              	
 136              	// common definitions in aos_chconf.h
 137              	
 138              	/** @} */
 139              	
 140              	/*===========================================================================*/
 141              	/**
 142              	 * @name Debug options
 143              	 * @{
 144              	 */
 145              	/*===========================================================================*/
 146              	
 147              	// common definitions in aos_chconf.h
 148              	
 149              	/** @} */
 150              	
 151              	/*===========================================================================*/
 152              	/**
 153              	 * @name Kernel hooks
 154              	 * @{
 155              	 */
 156              	/*===========================================================================*/
 157              	
 158              	// common definitions in aos_chconf.h
 159              	
 160              	/** @} */
 161              	
 162              	/*===========================================================================*/
 163              	/**
 164              	 * @name Port-specific settings (override port settings defaulted in chcore.h).
 165              	 * @{
 166              	 */
 167              	/*===========================================================================*/
 168              	
 169              	/**
 170              	 * @brief   Flag to enable/disable sleep mode when the system is idle.
 171              	 */
 172              	#define CORTEX_ENABLE_WFI_IDLE                  TRUE
 173              	
 174              	/** @} */
 175              	
 176              	/*===========================================================================*/
 177              	/**
 178              	 * @name other
 179              	 * @{
 180              	 */
 181              	/*===========================================================================*/
 182              	
 183              	// common definitions in aos_chconf.h
 184              	
 185              	/** @} */
 186              	
 187              	#include "../aos_chconf.h"
   1              	/*
 188              	
  39              	#include "chcore.h"
   1              	/*
ARM GAS  /tmp/cc59vyBt.s 			page 9


   2              	    ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3              	              2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4              	
   5              	    This file is part of ChibiOS.
   6              	
   7              	    ChibiOS is free software; you can redistribute it and/or modify
   8              	    it under the terms of the GNU General Public License as published by
   9              	    the Free Software Foundation version 3 of the License.
  10              	
  11              	    ChibiOS is distributed in the hope that it will be useful,
  12              	    but WITHOUT ANY WARRANTY; without even the implied warranty of
  13              	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14              	    GNU General Public License for more details.
  15              	
  16              	    You should have received a copy of the GNU General Public License
  17              	    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18              	*/
  19              	
  20              	/**
  21              	 * @file    ARMv6-M/chcore.h
  22              	 * @brief   ARMv6-M port macros and structures.
  23              	 *
  24              	 * @addtogroup ARMV6M_CORE
  25              	 * @{
  26              	 */
  27              	
  28              	#ifndef CHCORE_H
  29              	#define CHCORE_H
  30              	
  31              	/* Inclusion of the Cortex-Mx implementation specific parameters.*/
  32              	#include "cmparams.h"
   1              	/*
   2              	    ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3              	
   4              	    Licensed under the Apache License, Version 2.0 (the "License");
   5              	    you may not use this file except in compliance with the License.
   6              	    You may obtain a copy of the License at
   7              	
   8              	        http://www.apache.org/licenses/LICENSE-2.0
   9              	
  10              	    Unless required by applicable law or agreed to in writing, software
  11              	    distributed under the License is distributed on an "AS IS" BASIS,
  12              	    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13              	    See the License for the specific language governing permissions and
  14              	    limitations under the License.
  15              	*/
  16              	
  17              	/**
  18              	 * @file    STM32G0xx/cmparams.h
  19              	 * @brief   ARM Cortex-M0 parameters for the STM32G0xx.
  20              	 *
  21              	 * @defgroup ARMCMx_STM32G0xx STM32G0xx Specific Parameters
  22              	 * @ingroup ARMCMx_SPECIFIC
  23              	 * @details This file contains the Cortex-M0 specific parameters for the
  24              	 *          STM32G0xx platform.
  25              	 * @{
  26              	 */
ARM GAS  /tmp/cc59vyBt.s 			page 10


  27              	
  28              	#ifndef CMPARAMS_H
  29              	#define CMPARAMS_H
  30              	
  31              	/**
  32              	 * @brief   Cortex core model.
  33              	 */
  34              	#define CORTEX_MODEL            0
  35              	
  36              	/**
  37              	 * @brief   Floating Point unit presence.
  38              	 */
  39              	#define CORTEX_HAS_FPU          0
  40              	
  41              	/**
  42              	 * @brief   Number of bits in priority masks.
  43              	 */
  44              	#define CORTEX_PRIORITY_BITS    2
  45              	
  46              	/* If the device type is not externally defined, for example from the Makefile,
  47              	   then a file named board.h is included. This file must contain a device
  48              	   definition compatible with the vendor include file.*/
  49              	#if !defined (STM32G071xx) && !defined (STM32G081xx) &&                     \
  50              	    !defined (STM32G070xx) && !defined (STM32G030xx) &&                     \
  51              	    !defined (STM32G031xx) && !defined (STM32G041xx) &&                     \
  52              	    !defined (STM32G0B0xx) && !defined (STM32G0B1xx) &&                     \
  53              	    !defined (STM32G0C1xx) && !defined (STM32G050xx) &&                     \
  54              	    !defined (STM32G051xx) && !defined (STM32G061xx)
  55              	#include "board.h"
   1              	/*
  56              	#endif
  33              	
  40              	
  41              	#if !defined(__DOXYGEN__)
  42              	
  43              	/*
  44              	 * RTOS-specific context offset.
  45              	 */
  46              	#if defined(_CHIBIOS_RT_CONF_)
  47              	#define CONTEXT_OFFSET  12
  48              	
  49              	#elif defined(_CHIBIOS_NIL_CONF_)
  50              	#define CONTEXT_OFFSET  0
  51              	
  52              	#else
  53              	#error "invalid chconf.h"
  54              	#endif
  55              	
  56              	                .set    SCB_ICSR, 0xE000ED04
  57              	                .set    ICSR_PENDSVSET, 0x10000000
  58              	                .set    ICSR_NMIPENDSET, 0x80000000
  59              	
  60              	                .cpu    cortex-m0
  61              	                .fpu    softvfp
  62              	
  63              	                .thumb
  64              	                .text
ARM GAS  /tmp/cc59vyBt.s 			page 11


  65              	
  66              	/*--------------------------------------------------------------------------*
  67              	 * Performs a context switch between two threads.
  68              	 *--------------------------------------------------------------------------*/
  69              	                .thumb_func
  70              	                .globl  __port_switch
  71              	__port_switch:
  72 0000 F0B5     	                push    {r4, r5, r6, r7, lr}
  73 0002 4446     	                mov     r4, r8
  74 0004 4D46     	                mov     r5, r9
  75 0006 5646     	                mov     r6, r10
  76 0008 5F46     	                mov     r7, r11
  77 000a F0B4     	                push    {r4, r5, r6, r7}
  78              	                
  79 000c 6B46     	                mov     r3, sp
  80 000e CB60     	                str     r3, [r1, #CONTEXT_OFFSET]
  81 0010 C368     	                ldr     r3, [r0, #CONTEXT_OFFSET]
  82 0012 9D46     	                mov     sp, r3
  83              	                
  84 0014 F0BC     	                pop     {r4, r5, r6, r7}
  85 0016 A046     	                mov     r8, r4
  86 0018 A946     	                mov     r9, r5
  87 001a B246     	                mov     r10, r6
  88 001c BB46     	                mov     r11, r7
  89 001e F0BD     	                pop     {r4, r5, r6, r7, pc}
  90              	
  91              	/*--------------------------------------------------------------------------*
  92              	 * Start a thread by invoking its work function.
  93              	 *
  94              	 * Threads execution starts here, the code leaves the system critical zone
  95              	 * and then jumps into the thread function passed in register R4. The
  96              	 * register R5 contains the thread parameter. The function chThdExit() is
  97              	 * called on thread function return.
  98              	 *--------------------------------------------------------------------------*/
  99              	                .thumb_func
 100              	                .globl  __port_thread_start
 101              	__port_thread_start:
 102              	#if CH_DBG_SYSTEM_STATE_CHECK
 103 0020 FFF7FEFF 	                bl      __dbg_check_unlock
 104              	#endif
 105              	#if CH_DBG_STATISTICS
 106              	                bl      __stats_stop_measure_crit_thd
 107              	#endif
 108 0024 62B6     	                cpsie   i
 109 0026 281C     	                mov     r0, r5
 110 0028 A047     	                blx     r4
 111 002a 0020     	                movs    r0, #0              /* MSG_OK */
 112 002c FFF7FEFF 	                bl      chThdExit
 113 0030 FEE7     	.zombies:       b       .zombies
 114              	
 115              	/*--------------------------------------------------------------------------*
 116              	 * Post-IRQ switch code.
 117              	 *
 118              	 * Exception handlers return here for context switching.
 119              	 *--------------------------------------------------------------------------*/
 120              	                .thumb_func
 121              	                .globl  __port_switch_from_isr
ARM GAS  /tmp/cc59vyBt.s 			page 12


 122              	__port_switch_from_isr:
 123              	#if CH_DBG_STATISTICS
 124              	                bl      __stats_start_measure_crit_thd
 125              	#endif
 126              	#if CH_DBG_SYSTEM_STATE_CHECK
 127 0032 FFF7FEFF 	                bl      __dbg_check_lock
 128              	#endif
 129 0036 FFF7FEFF 	                bl      chSchDoPreemption
 130              	#if CH_DBG_SYSTEM_STATE_CHECK
 131 003a FFF7FEFF 	                bl      __dbg_check_unlock
 132              	#endif
 133              	#if CH_DBG_STATISTICS
 134              	                bl      __stats_stop_measure_crit_thd
 135              	#endif
 136              	                .globl  __port_exit_from_isr
 137              	__port_exit_from_isr:
 138 003e 024A     	                ldr     r2, .L2
 139 0040 024B     	                ldr     r3, .L3
 140 0042 1360     	                str     r3, [r2, #0]
 141              	#if CORTEX_ALTERNATE_SWITCH
 142              	                cpsie   i
 143              	#endif
 144 0044 FEE7     	.L1:            b       .L1
 145              	
 146 0046 C046     	                .align  2
 147 0048 04ED00E0 	.L2:            .word   SCB_ICSR
 148              	#if CORTEX_ALTERNATE_SWITCH
 149              	.L3:            .word   ICSR_PENDSVSET
 150              	#else
 151 004c 00000080 	.L3:            .word   ICSR_NMIPENDSET
ARM GAS  /tmp/cc59vyBt.s 			page 13


DEFINED SYMBOLS
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:56     *ABS*:00000000e000ed04 SCB_ICSR
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:57     *ABS*:0000000010000000 ICSR_PENDSVSET
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:58     *ABS*:0000000080000000 ICSR_NMIPENDSET
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:71     .text:0000000000000000 __port_switch
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:72     .text:0000000000000000 $t
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:101    .text:0000000000000020 __port_thread_start
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:113    .text:0000000000000030 .zombies
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:122    .text:0000000000000032 __port_switch_from_isr
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:137    .text:000000000000003e __port_exit_from_isr
../../kernel/ChibiOS/os/common/ports/ARMv6-M/compilers/GCC/chcoreasm.S:147    .text:0000000000000048 $d

UNDEFINED SYMBOLS
__dbg_check_unlock
chThdExit
__dbg_check_lock
chSchDoPreemption
